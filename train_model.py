# -*- coding: utf-8 -*-
"""Untitled4.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/18lb5Goror-Bc0c5nSg9N9-m1ZDB_vM7C#scrollTo=9eNAzreEF0nB

# Import the necessary libraries
"""

from tensorflow.keras import layers
from tensorflow.keras import models
from keras.datasets import mnist
from keras.utils import to_categorical

"""# Load MNIST dataset"""

(train_data, train_labels), (test_data, test_labels) = mnist.load_data()

"""# Build a Convolutional Neural Network (CNN) model"""

cnn_model = models.Sequential()
cnn_model.add(layers.Conv2D(32, (3, 3), activation='relu', input_shape=(28, 28, 1)))
cnn_model.add(layers.MaxPooling2D((2, 2)))
cnn_model.add(layers.Conv2D(64, (3, 3), activation='relu'))
cnn_model.add(layers.MaxPooling2D((2, 2)))
cnn_model.add(layers.Conv2D(64, (3, 3), activation='relu'))

cnn_model.add(layers.Flatten())
cnn_model.add(layers.Dense(64, activation='relu'))
cnn_model.add(layers.Dense(10, activation='softmax'))
cnn_model.summary()

"""# Preprocess and normalize data"""

train_data = train_data.reshape((60000, 28, 28, 1))
train_data = train_data.astype('float32') / 255
test_data = test_data.reshape((10000, 28, 28, 1))
test_data = test_data.astype('float32') / 255
train_labels = to_categorical(train_labels)
test_labels = to_categorical(test_labels)

"""# Compile and train the model"""

cnn_model.compile(optimizer='rmsprop', loss='categorical_crossentropy', metrics=['accuracy'])
cnn_model.fit(train_data, train_labels, epochs=5, batch_size=64)

"""# Evaluate the model on test data"""

test_loss, test_accuracy = cnn_model.evaluate(test_data, test_labels)
print("\nTest Accuracy:", (test_accuracy)*100, "%")

"""# Save the model"""

cnn_model.save('mnist_model.h5')